name: Running tests and publish metrics to sonarClound

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn clean install -DskipTests -Ptest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Maven tests
        run: mvn -B verify -Ptest

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: report-upload
          path: coverage/

  sonnar:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download report
        uses: actions/download-artifact@v4
        with:
          name: report-upload
          path: coverage/

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ vars.DOCKER_PASSWORD }}

      - name: Pull sonarsource/sonar-scanner-cli image
        run: docker pull "sonarsource/sonar-scanner-cli:latest"

      - name: Analysing with sonarsource
        run: docker run -e SONAR_TOKEN=${{ secrets.SONAR_TOKEN }}  -v "${PWD}:/usr/src" sonarsource/sonar-scanner-cli